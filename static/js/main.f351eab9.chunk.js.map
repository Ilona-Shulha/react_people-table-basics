{"version":3,"sources":["components/HomePage.tsx","api/getPeople.ts","components/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","url","fetch","then","response","ok","Error","status","statusText","json","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","el","PeoplePage","useState","setPeople","useEffect","res","mother","find","father","NotFoundPage","Header","to","App","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"uOAAaA,EAAW,kBACtB,oBAAIC,UAAU,QAAd,wB,qBCYWC,EAAY,WACvB,OAZeC,EAYA,eAXRC,MAAM,GAAD,OAHG,yDAGH,OAAeD,IACxBE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,YAAgCH,EAASI,aAGjD,OAAOJ,EAASK,UAPN,IAACR,GCIJS,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzCC,EACED,EADFC,KAAMC,EACJF,EADIE,IAAKC,EACTH,EADSG,KAAMC,EACfJ,EADeI,KAAMC,EACrBL,EADqBK,WAAYC,EACjCN,EADiCM,WAGrC,OACE,qBAEElB,UAAU,SAFZ,UAIE,6BAAKa,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,IACL,6BAAKC,MATP,UACUH,GADV,OACiBC,KCLRG,G,MAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAC1C,wBAAOpB,UAAU,oBAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGoB,EAAOC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAAWV,OAAQU,cCjBdC,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeK,EAAf,KAiBA,OAfAC,qBAAU,WACRzB,IACGG,MAAK,SAAAuB,GAAG,OAAIF,EAAUE,EAAIN,KAAI,SAACC,GAC9B,IAAMM,EAASD,EAAIE,MAAK,SAACjB,GACvB,OAAOA,EAAOC,OAASS,EAAGL,cAGtBa,EAASH,EAAIE,MAAK,SAACjB,GACvB,OAAOA,EAAOC,OAASS,EAAGJ,cAG5B,OAAO,2BAAKI,GAAZ,IAAgBM,SAAQE,oBAE3B,IAGD,qCACE,oBAAI9B,UAAU,QAAd,wBACA,cAAC,EAAD,CAAaoB,OAAQA,QC1BdW,EAAe,kBAC1B,oBAAI/B,UAAU,QAAd,6BCCWgC,G,MAAS,kBACpB,qCACE,cAAC,IAAD,CACEC,GAAG,IACHjC,UAAU,0BAFZ,kBAMA,cAAC,IAAD,CACEiC,GAAG,UACHjC,UAAU,0BAFZ,yBCCWkC,EAPH,kBACV,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,QCGJmC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUL,GAAG,IAAIO,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aAI/BG,SAASC,eAAe,W","file":"static/js/main.f351eab9.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","const BASE_URL = 'https://mate-academy.github.io/react_people-table/api';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status}-${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPeople = () => {\n  return request('/people.json');\n};\n","import { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const {\n    name, sex, born, died, motherName, fatherName,\n  } = person;\n\n  return (\n    <tr\n      key={`${born}${died}`}\n      className=\"Person\"\n    >\n      <td>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{motherName}</td>\n      <td>{fatherName}</td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonRow } from '../PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table className=\"PeopleTable table\">\n    <thead>\n      <tr>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>mother</th>\n        <th>father</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map((el) => (\n        <PersonRow person={el} />\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api/getPeople';\nimport { PeopleTable } from './PeopleTable/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(res => setPeople(res.map((el: Person) => {\n        const mother = res.find((person: Person) => {\n          return person.name === el.motherName;\n        });\n\n        const father = res.find((person: Person) => {\n          return person.name === el.fatherName;\n        });\n\n        return { ...el, mother, father };\n      })));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">Peope page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Link } from 'react-router-dom';\n\nexport const Header = () => (\n  <>\n    <Link\n      to=\"/\"\n      className=\"button is-info is-light\"\n    >\n      Home\n    </Link>\n    <Link\n      to=\"/people\"\n      className=\"button is-info is-light\"\n    >\n      People\n    </Link>\n  </>\n);\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from './components/Header';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Outlet />\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}